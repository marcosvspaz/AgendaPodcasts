{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcospaz/Documentos/GitHub/AgendaPodcasts/components/Body/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\nvar Body = makeStyles(_c = function _c(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n});\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\n_c2 = Body;\nexport default function SingleLineGridList() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      className: classes.gridList,\n      cols: 2.5,\n      children: tileData.map(function (tile) {\n        return /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tile.img,\n            alt: tile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: tile.title,\n            classes: {\n              root: classes.titleBar,\n              title: classes.title\n            },\n            actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"star \".concat(tile.title),\n              children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n                className: classes.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this)]\n        }, tile.img, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleLineGridList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c3 = SingleLineGridList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Body$makeStyles\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"SingleLineGridList\");","map":{"version":3,"sources":["/home/marcospaz/Documentos/GitHub/AgendaPodcasts/components/Body/index.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","Body","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","classes","useStyles","map","tile","img"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,IAAI,GAAGP,UAAU,MAAC,YAACQ,KAAD;AAAA,SAAY;AAClCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,cAAc,EAAE,cAHZ;AAIJC,MAAAA,QAAQ,EAAE,QAJN;AAKJC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,KAD4B;AAQlCC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,QAAQ,EAAE,QADF;AAER;AACAQ,MAAAA,SAAS,EAAE;AAHH,KARwB;AAalCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AADxB,KAb2B;AAgBlCC,IAAAA,QAAQ,EAAE;AACRR,MAAAA,UAAU,EACR;AAFM;AAhBwB,GAAZ;AAAA,CAAD,CAAvB;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAtCMT,I;AAuCN,eAAe,SAASkB,kBAAT,GAA8B;AAAA;;AAAA;;AAC3C,MAAMC,OAAO,GAAGC,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACjB,IAAxB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEiB,OAAO,CAACR,QAA7B;AAAuC,MAAA,IAAI,EAAE,GAA7C;AAAA,gBACGZ,QAAQ,CAACsB,GAAT,CAAa,UAACC,IAAD;AAAA,4BACZ,QAAC,YAAD;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,YAAA,GAAG,EAAED,IAAI,CAACT;AAA9B;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,eAAD;AACE,YAAA,KAAK,EAAES,IAAI,CAACT,KADd;AAEE,YAAA,OAAO,EAAE;AACPX,cAAAA,IAAI,EAAEiB,OAAO,CAACF,QADP;AAEPJ,cAAAA,KAAK,EAAEM,OAAO,CAACN;AAFR,aAFX;AAME,YAAA,UAAU,eACR,QAAC,UAAD;AAAY,2CAAoBS,IAAI,CAACT,KAAzB,CAAZ;AAAA,qCACE,QAAC,cAAD;AAAgB,gBAAA,SAAS,EAAEM,OAAO,CAACN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA,WAAmBS,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1BuBL,kB;;MAAAA,kB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst Body = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}