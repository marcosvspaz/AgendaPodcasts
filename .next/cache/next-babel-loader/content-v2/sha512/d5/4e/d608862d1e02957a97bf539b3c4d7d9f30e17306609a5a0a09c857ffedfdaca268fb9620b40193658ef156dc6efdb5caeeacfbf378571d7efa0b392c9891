{"ast":null,"code":"/* eslint-disable react/react-in-jsx-scope */\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { THEMES } from 'src/utils/constants';\nimport Body from '../components/Body';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nconst themesOptions = [{\n  name: THEMES.LIGHT,\n  overrides: {\n    MuiInputBase: {\n      input: {\n        '&::placeholder': {\n          opacity: 1,\n          color: colors.blueGrey[600]\n        }\n      }\n    }\n  },\n  palette: {\n    type: 'light',\n    action: {\n      active: colors.blueGrey[600]\n    },\n    background: {\n      default: colors.common.white,\n      dark: '#f4f6f8',\n      paper: colors.common.white\n    },\n    primary: {\n      main: '#f44336'\n    },\n    secondary: {\n      main: '#3EA6FF'\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  }\n}, {\n  name: THEMES.DARK,\n  palette: {\n    type: 'dark',\n    action: {\n      active: 'rgba(255, 255, 255, 0.54)',\n      hover: 'rgba(255, 255, 255, 0.04)',\n      selected: 'rgba(255, 255, 255, 0.08)',\n      disabled: 'rgba(255, 255, 255, 0.26)',\n      disabledBackground: 'rgba(255, 255, 255, 0.12)',\n      focus: 'rgba(255, 255, 255, 0.12)'\n    },\n    background: {\n      default: '#282C34',\n      dark: '#1c2025',\n      paper: '#282C34'\n    },\n    primary: {\n      main: '#8a85ff'\n    },\n    secondary: {\n      main: '#8a85ff'\n    },\n    text: {\n      primary: '#e6e5e8',\n      secondary: '#adb0bb'\n    }\n  }\n}];\nexport const createTheme = (config = {}) => {\n  let themeOptions = themesOptions.find(theme => theme.name === config.theme);\n\n  if (!themeOptions) {\n    console.warn(new Error(`The theme ${config.theme} is not valid`));\n    [themeOptions] = themesOptions;\n  }\n\n  const theme = createMuiTheme(themeOptions);\n  return theme;\n};\nexport default createTheme;","map":{"version":3,"sources":["/home/marcospaz/Documentos/GitHub/AgendaPodcasts/src/theme/index.js"],"names":["createMuiTheme","colors","THEMES","Body","Footer","Header","themesOptions","name","LIGHT","overrides","MuiInputBase","input","opacity","color","blueGrey","palette","type","action","active","background","default","common","white","dark","paper","primary","main","secondary","text","DARK","hover","selected","disabled","disabledBackground","focus","createTheme","config","themeOptions","find","theme","console","warn","Error"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,IAAI,EAAEL,MAAM,CAACM,KADf;AAEEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE;AACL,0BAAkB;AAChBC,UAAAA,OAAO,EAAE,CADO;AAEhBC,UAAAA,KAAK,EAAEZ,MAAM,CAACa,QAAP,CAAgB,GAAhB;AAFS;AADb;AADK;AADL,GAFb;AAYEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,OADC;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEjB,MAAM,CAACa,QAAP,CAAgB,GAAhB;AADF,KAFD;AAKPK,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAEnB,MAAM,CAACoB,MAAP,CAAcC,KADb;AAEVC,MAAAA,IAAI,EAAE,SAFI;AAGVC,MAAAA,KAAK,EAAEvB,MAAM,CAACoB,MAAP,CAAcC;AAHX,KALL;AAUPG,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KAVF;AAaPC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG,KAbJ;AAgBPE,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAExB,MAAM,CAACa,QAAP,CAAgB,GAAhB,CADL;AAEJa,MAAAA,SAAS,EAAE1B,MAAM,CAACa,QAAP,CAAgB,GAAhB;AAFP;AAhBC;AAZX,CADoB,EAmCpB;AACEP,EAAAA,IAAI,EAAEL,MAAM,CAAC2B,IADf;AAEEd,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,2BADF;AAENY,MAAAA,KAAK,EAAE,2BAFD;AAGNC,MAAAA,QAAQ,EAAE,2BAHJ;AAINC,MAAAA,QAAQ,EAAE,2BAJJ;AAKNC,MAAAA,kBAAkB,EAAE,2BALd;AAMNC,MAAAA,KAAK,EAAE;AAND,KAFD;AAUPf,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,SADC;AAEVG,MAAAA,IAAI,EAAE,SAFI;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAVL;AAePC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KAfF;AAkBPC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG,KAlBJ;AAqBPE,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAE,SADL;AAEJE,MAAAA,SAAS,EAAE;AAFP;AArBC;AAFX,CAnCoB,CAAtB;AAkEA,OAAO,MAAMQ,WAAW,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiB;AAC1C,MAAIC,YAAY,GAAG/B,aAAa,CAACgC,IAAd,CAAoBC,KAAD,IAAWA,KAAK,CAAChC,IAAN,KAAe6B,MAAM,CAACG,KAApD,CAAnB;;AAEA,MAAI,CAACF,YAAL,EAAmB;AACjBG,IAAAA,OAAO,CAACC,IAAR,CAAa,IAAIC,KAAJ,CAAW,aAAYN,MAAM,CAACG,KAAM,eAApC,CAAb;AACA,KAACF,YAAD,IAAiB/B,aAAjB;AACD;;AAED,QAAMiC,KAAK,GAAGvC,cAAc,CAACqC,YAAD,CAA5B;AAEA,SAAOE,KAAP;AACD,CAXM;AAaP,eAAeJ,WAAf","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { THEMES } from 'src/utils/constants';\nimport Body from '../components/Body';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst themesOptions = [\n  {\n    name: THEMES.LIGHT,\n    overrides: {\n      MuiInputBase: {\n        input: {\n          '&::placeholder': {\n            opacity: 1,\n            color: colors.blueGrey[600],\n          },\n        },\n      },\n    },\n    palette: {\n      type: 'light',\n      action: {\n        active: colors.blueGrey[600],\n      },\n      background: {\n        default: colors.common.white,\n        dark: '#f4f6f8',\n        paper: colors.common.white,\n      },\n      primary: {\n        main: '#f44336',\n      },\n      secondary: {\n        main: '#3EA6FF',\n      },\n      text: {\n        primary: colors.blueGrey[900],\n        secondary: colors.blueGrey[600],\n      },\n    },\n  },\n  {\n    name: THEMES.DARK,\n    palette: {\n      type: 'dark',\n      action: {\n        active: 'rgba(255, 255, 255, 0.54)',\n        hover: 'rgba(255, 255, 255, 0.04)',\n        selected: 'rgba(255, 255, 255, 0.08)',\n        disabled: 'rgba(255, 255, 255, 0.26)',\n        disabledBackground: 'rgba(255, 255, 255, 0.12)',\n        focus: 'rgba(255, 255, 255, 0.12)',\n      },\n      background: {\n        default: '#282C34',\n        dark: '#1c2025',\n        paper: '#282C34',\n      },\n      primary: {\n        main: '#8a85ff',\n      },\n      secondary: {\n        main: '#8a85ff',\n      },\n      text: {\n        primary: '#e6e5e8',\n        secondary: '#adb0bb',\n      },\n    },\n  },\n];\n\nexport const createTheme = (config = {}) => {\n  let themeOptions = themesOptions.find((theme) => theme.name === config.theme);\n\n  if (!themeOptions) {\n    console.warn(new Error(`The theme ${config.theme} is not valid`));\n    [themeOptions] = themesOptions;\n  }\n\n  const theme = createMuiTheme(themeOptions);\n\n  return theme;\n};\n\nexport default createTheme;\n"]},"metadata":{},"sourceType":"module"}