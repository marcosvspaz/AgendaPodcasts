{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcospaz/Documentos/GitHub/AgendaPodcastsVercel/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcospaz/Documentos/GitHub/AgendaPodcastsVercel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from 'mongodb';\nexport function openDB() {\n  return _openDB.apply(this, arguments);\n}\n\nfunction _openDB() {\n  _openDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            client = new MongoClient(process.env.MONGO_URI, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n            if (client.isConnected()) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 4;\n            return client.connect();\n\n          case 4:\n            return _context.abrupt(\"return\", client.db('agendapodcasts'));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _openDB.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcospaz/Documentos/GitHub/AgendaPodcastsVercel/src/lib/openDB.js"],"names":["MongoClient","openDB","client","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","isConnected","connect","db"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAGA,gBAAsBC,MAAtB;AAAA;AAAA;;;qEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,MADD,GACU,IAAIF,WAAJ,CAAgBG,OAAO,CAACC,GAAR,CAAYC,SAA5B,EAAuC;AACpDC,cAAAA,eAAe,EAAE,IADmC;AAEpDC,cAAAA,kBAAkB,EAAE;AAFgC,aAAvC,CADV;;AAAA,gBAMAL,MAAM,CAACM,WAAP,EANA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAM4BN,MAAM,CAACO,OAAP,EAN5B;;AAAA;AAAA,6CAQEP,MAAM,CAACQ,EAAP,CAAU,gBAAV,CARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { MongoClient } from 'mongodb';\n\n\nexport async function openDB() {\n  const client = new MongoClient(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  });\n\n  if (!client.isConnected()) await client.connect();\n\n  return client.db('agendapodcasts');\n}"]},"metadata":{},"sourceType":"module"}